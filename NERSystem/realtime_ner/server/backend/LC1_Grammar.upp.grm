# EXAMPLE CHANGI TOWER LOCAL CONTROLLER LC1 TOC INSTRUCTION GRAMMAR
# AUTHORS: RMT

# WED MAR 29 2017 11:30 EST

en = SymbolTable['/home/tongrong/Projects/CAAS/Grammar_may05/caas/lang_sg_en_tel_test_tg/words.txt'];

ICAO_ALPHABET = "ALPHA".en | "BRAVO".en | "CHARLIE".en | "DELTA".en | "ECHO".en | "FOXTROT".en | "GOLF".en | "HOTEL".en | "INDIA".en | "JULIET".en | "KILO".en | "LIMA".en | "MIKE".en | "NOVEMBER".en | "OSCAR".en | "PAPA".en | "QUEBEC".en | "ROMEO".en | "SIERRA".en | "TANGO".en | "UNIFORM".en | "VICTOR".en | "WHISKEY".en | "XRAY".en | "YANKEE".en | "ZULU".en;

# DIGITS
ONE = "ONE".en;
TWO = "TWO".en;
THREE = "THREE".en;
FOUR = "FOUR".en;
FIVE = "FIVE".en;
SIX = "SIX".en;
SEVEN = "SEVEN".en;
EIGHT = "EIGHT".en;
NINE = "NINE".en | "NINER".en;
ZERO  = "ZERO".en;

DIGIT = ONE | TWO | THREE | FOUR | FIVE | SIX | SEVEN | EIGHT | NINE | ZERO;

LEFT = "LEFT".en;
RIGHT = "RIGHT".en;
CENTRE = "CENTER".en | "CENTRE".en;

#AIRLINE_DESIGNATORS CURRENTLY REPRESENTS A SUBSET OF MOST COMMON CALL SIGNS FROM THE HUMAN TRANSCRIPTIONS
AIRLINE_DESIGNATOR = ("SINGAPORE".en <.265>) | ("JET".en  "STAR".en "ASIA".en <.073>) | ("GO".en "CAT".en <.071>) | ("SILK".en "AIR".en <.061>) | ("RED".en "CAP".en <.035>) | ("SCOOTER".en <.027>) | ("INDONESIA".en <.027>) | (("WAGON".en | "UNION".en) "AIR".en <.02>) | ("CATHAY".en <.019>) | ("MALAYSIAN".en <.015>) | ("EMIRATES".en <.015>) | ("THAI".en "ASIA".en <.014>) | ("CEBU".en <.014>) | ("LION".en <.011>) | ("QANTAS".en <.011>) | ("CHINA".en "EASTERN".en <.01>) | ("MALINDO".en <.01>) | ("SING".en "CARGO".en <.01>) | ("CHINA".en <.01>) | ("FIREFLY".en <.01>) | ("DYNASTY".en <.01>) | ("ALL".en "NIPPON".en <.008>) | ("QATARI".en <.008>) | ("JET".en "AIRWAYS".en <.007>) | ("VIET".en "NAM".en <.007>);

CALLSIGN = AIRLINE_DESIGNATOR DIGIT? DIGIT? DIGIT? DIGIT?;

# WIND IS EITHER LIGHT AND VARIABLE, CALM OR SPECIFIED WITH HEADING AND THEN SPEED, WORD SURFACE IS OPTIONAL, USED FOR LANDING AIRCRAFT
WX_WIND_PHRASE = ("SURFACE".en)? "WIND".en ("LIGHT".en "AND".en "VARIABLE".en | "CALM".en | DIGIT DIGIT ZERO ("KNOTS".en)? ("AT".en)? DIGIT DIGIT? "DEGREES"?);
AFTER_THE_LANDING_CTL_PHRASE = ("AFTER".en "THE".en "LANDING".en) CALLSIGN; 

#FLIGHT LEVEL
FL_LEVEL = "FLIGHT".en "LEVEL".en ((DIGIT? ("HUNDRED".en | "THOUSAND".en)) | (DIGIT? DIGIT?) | (DIGIT? DIGIT? "THOUSAND".en) | (DIGIT? "THOUSAND".en DIGIT? "HUNDRED".en));

# RUNWAYS
# EXPECT 02L AND 20R THE MOST, OTHERS WILL BE LESS USED BY LC1 POSITION
RUNWAY_02L = ("RUNWAY".en)? ZERO TWO LEFT;   # TAG AS RUNWAY_02L
RUNWAY_20R = ("RUNWAY".en)? TWO ZERO RIGHT;  # TAG AS RUNWAY_02R

RUNWAY_02C = ("RUNWAY".en)? ZERO TWO CENTRE; # TAG AS RUNWAY_02C
RUNWAY_20C = ("RUNWAY".en)? TWO ZERO CENTRE; # TAG AS RUNWAY_20C

RUNWAY_02R = ("RUNWAY".en)? ZERO TWO RIGHT; # TAG AS RUNWAY_02R
RUNWAY_20L = ("RUNWAY".en)? TWO ZERO LEFT;  # TAG AS RUNWAY_20L

EXPECTED_RUNWAY = RUNWAY_02L | RUNWAY_20R;
UNEXPECTED_RUNWAY = RUNWAY_02C | RUNWAY_20C;
PROBABILITY_ZERO_RUNWAY = RUNWAY_02R | RUNWAY_20L;
AIRPORT_RUNWAY = (EXPECTED_RUNWAY <0.9>) | (UNEXPECTED_RUNWAY <0.8>) | (PROBABILITY_ZERO_RUNWAY <0.2>); 

# RUNWAY USE CLEARANCES
CTL_PREFIX = ("YOU'RE".en | "YOU".en "ARE".en | "AND".en);
CTL_PHRASE = CTL_PREFIX? ("CLEARED".en | "CLEAR".en) ("TO".en)? "LAND".en;
LUAW_SUFFIX = "VIA".en "WHISKEY".en;
CFT_PHRASE = ("CLEARED".en | "CLEAR".en) ("FOR".en)? "TAKEOFF".en;
LUAW_PHRASE = ("LINE".en "UP".en) ("BEHIND".en)? ("AND".en)? ("WAIT".en)?; 

# NON RUNWAY USE CLEARANCES THAT CAN REFER TO RUNWAYS
HOLD_SHORT_PHRASE = "HOLD".en "SHORT".en;
CROSS_PHRASE = "CROSS".en;
CONTINUE_APPROACH_PHRASE = "CONTINUE".en "APPROACH".en;

CTL_CLEARANCE = (AIRPORT_RUNWAY WX_WIND_PHRASE? CTL_PHRASE) | (CTL_PHRASE AIRPORT_RUNWAY) | (AFTER_THE_LANDING_CTL_PHRASE AIRPORT_RUNWAY CTL_PHRASE) | (AIRPORT_RUNWAY AFTER_THE_LANDING_CTL_PHRASE? CTL_PHRASE);
CFT_CLEARANCE = WX_WIND_PHRASE? ((AIRPORT_RUNWAY CFT_PHRASE) | (CFT_PHRASE AIRPORT_RUNWAY));
LUAW_CLEARANCE = LUAW_PHRASE AIRPORT_RUNWAY LUAW_SUFFIX?;
HOLD_SHORT_CLEARANCE = HOLD_SHORT_PHRASE ("OF".en)? (AIRPORT_RUNWAY)?;
CROSS_RUNWAY_CLEARANCE = CROSS_PHRASE AIRPORT_RUNWAY;
CONTINUE_APPROACH_CLEARANCE = (AIRPORT_RUNWAY CONTINUE_APPROACH_PHRASE) | (CONTINUE_APPROACH_PHRASE AIRPORT_RUNWAY?);

IMMEDIATE_RUNWAY_USE_CLEARANCE = CTL_CLEARANCE | CFT_CLEARANCE | LUAW_CLEARANCE | CROSS_RUNWAY_CLEARANCE;
NON_IMMEDIATE_RUNWAY_USE_CLEARANCE = HOLD_SHORT_CLEARANCE | CONTINUE_APPROACH_CLEARANCE;

# TRANSFER OF CONTROL (TOC) INSTRUCTIONS

TOC_SEP = ("AT".en |"ON".en)?;   # ALLOW AT OR ON BEFORE THE FREQUENCY, BUT NOT BOTH.  DECIMAL IS OPTIONAL 

GROUND_FREQ = ("ONE".en "TWO".en "FOUR".en ("DECIMAL".en)? "THREE".en) | ("ONE".en "TWO".en "ONE".en ("DECIMAL".en)? "EIGHT".en ("FIVE".en)?) | ("ONE".en "TWO".en "ONE".en ("DECIMAL".en)? "TWO".en ("SEVEN".en)?);    
DEPARTURE_FREQ = "ONE".en "TWO".en "ZERO".en ("DECIMAL".en)? "THREE".en;
APPROACH_FREQ = "ONE".en "TWO".en "ZERO".en ("DECIMAL".en)? "THREE".en;
TOWER_FREQ = "ONE".en "ONE".en "EIGHT".en ("DECIMAL".en)? "SIX".en;
	   
# ALLOW CONTACT OR GROUND OR CONTACT GROUND, WORD SINGAPORE IS ONLY ALLOWED IF BOTH CONTACT & GROUND ARE STATED

GROUND_TOC_INSTRUCTION = "CONTACT".en ("SINGAPORE".en)? "GROUND".en TOC_SEP GROUND_FREQ; 
DEPARTURE_TOC_INSTRUCTION = "CONTACT".en ("SINGAPORE".en)? "DEPARTURE".en TOC_SEP DEPARTURE_FREQ;
APPROACH_TOC_INSTRUCTION = "CONTACT".en ("SINGAPORE".en)? "APPROACH".en TOC_SEP APPROACH_FREQ; 
TOWER_TOC_INSTRUCTION = "CONTACT".en ("SINGAPORE".en)? "TOWER".en TOC_SEP TOWER_FREQ ;

TOC_INSTRUCTION = (GROUND_TOC_INSTRUCTION <0.45>) | (DEPARTURE_TOC_INSTRUCTION <0.45>) | (APPROACH_TOC_INSTRUCTION <0.05>) | (TOWER_TOC_INSTRUCTION <0.05>);

TAXI_INSTRUCTION = "VACATE".en "RUNWAY".en | "VACATE".en "WHISKEY".en "ONE".en | "VACATE".en "WHISKEY".en "TWO".en | "VACATE".en "WHISKEY".en "THREE".en | "VACATE".en "WHISKEY".en "FOUR".en | "VACATE".en "WHISKEY".en "FIVE".en | "VACATE".en "WHISKEY".en "SIX".en | "VACATE".en "WHISKEY".en "SEVEN".en | "VACATE".en "WHISKEY".en "EIGHT".en | "VACATE".en "WHISKEY".en "NINE".en | "VACATE".en "WHISKEY".en "TEN".en | ("TAXI".en "TO".en "HOLDING".en "POINT".en) | "VACATE".en "ECHO".en "ONE".en | "VACATE".en "ECHO".en "TWO".en | "VACATE".en "ECHO".en "THREE".en | "VACATE".en "ECHO".en "FOUR".en | "VACATE".en "ECHO".en "FIVE".en | "VACATE".en "ECHO".en "SIX".en | "VACATE".en "ECHO".en "SEVEN".en | "VACATE".en "ECHO".en "EIGHT".en | "VACATE".en "ECHO".en "NINE".en | "VACATE".en "ECHO".en "TEN".en | "VACATE".en "ECHO".en "ELEVEN".en | "VACATE".en "ECHO".en "TWELVE".en ;

LC_CLEARANCE = IMMEDIATE_RUNWAY_USE_CLEARANCE | NON_IMMEDIATE_RUNWAY_USE_CLEARANCE;

ATC_INFORMATION = WX_WIND_PHRASE;

FL_INSTRUCTIONS = (("CLIMB".en | "CLIMBING".en | "DESCEND".en | "DESCENDING".en) "TO".en) | ("MAINTAIN".en) FL_LEVEL;

export COMMANDS = CALLSIGN (LC_CLEARANCE | (TAXI_INSTRUCTION GROUND_TOC_INSTRUCTION?) | TOC_INSTRUCTION  | TAXI_INSTRUCTION | ATC_INFORMATION | FL_INSTRUCTIONS);
